// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// kVector
std::vector<double> kVector(std::vector<double> w, int knn, int nthreads);
RcppExport SEXP _miknn_kVector(SEXP wSEXP, SEXP knnSEXP, SEXP nthreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type knn(knnSEXP);
    Rcpp::traits::input_parameter< int >::type nthreads(nthreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(kVector(w, knn, nthreads));
    return rcpp_result_gen;
END_RCPP
}
// kVector2
std::vector<double> kVector2(std::vector<double> w, int knn, int nthreads);
RcppExport SEXP _miknn_kVector2(SEXP wSEXP, SEXP knnSEXP, SEXP nthreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type knn(knnSEXP);
    Rcpp::traits::input_parameter< int >::type nthreads(nthreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(kVector2(w, knn, nthreads));
    return rcpp_result_gen;
END_RCPP
}
// neighbors
NumericVector neighbors(NumericVector y, NumericVector x);
RcppExport SEXP _miknn_neighbors(SEXP ySEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(neighbors(y, x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_miknn_kVector", (DL_FUNC) &_miknn_kVector, 3},
    {"_miknn_kVector2", (DL_FUNC) &_miknn_kVector2, 3},
    {"_miknn_neighbors", (DL_FUNC) &_miknn_neighbors, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_miknn(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
